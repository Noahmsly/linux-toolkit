#!/bin/bash

echo "Running pre-push hook..."

# Extract the current version from Cargo.toml
CURRENT_VERSION=$(grep '^version = ' Cargo.toml | sed -E 's/version = "(.*)"/\1/' | tr -d '\r' | tr -d ' ')
if [[ -z "$CURRENT_VERSION" ]]; then
  echo "Error: Version not found in Cargo.toml"
  exit 1
fi
echo "Current version: $CURRENT_VERSION"

# Validate version format
if ! [[ "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  echo "Error: Invalid version format in Cargo.toml"
  exit 1
fi

# Split the version into major, minor, and patch
IFS='.' read -r MAJOR MINOR PATCH <<<"$CURRENT_VERSION"

# Increment the patch version
NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
echo "New version: $NEW_VERSION"

# Update the version in Cargo.toml
sed -i "s/version = \"$CURRENT_VERSION\"/version = \"$NEW_VERSION\"/" Cargo.toml
if [[ $? -ne 0 ]]; then
  echo "Failed to update Cargo.toml"
  exit 1
fi
echo "Cargo.toml updated successfully."

# Update the version in README.md
sed -i "s/releases\/download\/v[0-9]\+\.[0-9]\+\.[0-9]\+/releases\/download\/v$NEW_VERSION/" README.md
if [[ $? -ne 0 ]]; then
  echo "Failed to update README.md (curl command)"
  exit 1
fi

sed -i "s/\`v[0-9]\+\.[0-9]\+\.[0-9]\`/\`v$NEW_VERSION\`/" README.md
if [[ $? -ne 0 ]]; then
  echo "Failed to update README.md (text)"
  exit 1
fi
echo "README.md updated successfully."

# Stage the changes
git add Cargo.toml README.md
echo "Changes staged successfully."

# Commit the changes
git commit -m "Bump version to $NEW_VERSION" --no-verify
if [[ $? -ne 0 ]]; then
  echo "Failed to commit changes"
  exit 1
fi
echo "Changes committed successfully."

# Handle potential tag conflicts
TAG="v$NEW_VERSION"
if git tag -l | grep -q "$TAG"; then
  echo "Tag $TAG already exists. Deleting and recreating..."
  git tag -d "$TAG"
fi

# Create the new tag
git tag "$TAG"
echo "Tag $TAG created successfully."
